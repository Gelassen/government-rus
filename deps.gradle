ext {
    versions = [
            BUILD_TOOLS_VERSION: '30.0.2',
            MIN_SDK_VERSION    : 21,
            TARGET_SDK_VERSION : 30,
            COMPILE_SDK_VERSION: 31,
            kotlin             : '1.5.31',
            detekt             : '1.0.0-RC14',
            android_junit5     : '1.2.0.0',
            kodein             : '6.2.0',
            lifecycle          : '2.0.0',
            lifecycleKtx       : '2.4.0-rc01',
            spek               : '2.0.4',
            junit5_runner      : '0.2.2',
            mockk              : '1.9.3',
            mockwebserver      : '3.14.0',
            retrofit           : '2.9.0',
            coroutines         : '1.3.9',
            room               : '2.1.0-beta01',
            espressoVersion    : '3.5.0-alpha03',
            test               : '1.4.1-alpha03',
            espressoContrib    : '3.5.0-alpha03',
            dagger             : '2.24',
            activityKtx        : '1.3.1',
            fragmentKtx        : '1.3.6',
            idlingResource     : '3.4.0',
            paging             : '3.1.0-beta01',
            pagingCompose      : '1.0.0-alpha14',
            espressoIntents    : '3.4.0',
            mockitoCore        : '3.12.4',
            mockitoKotlin      : '3.2.0',
            mocktioDexmaker    : '2.28.1',
    ]

    androidx = [
            appcompat             : 'androidx.appcompat:appcompat:1.2.0',
            core                  : 'androidx.core:core-ktx:1.3.0',
            constraintlayout      : 'androidx.constraintlayout:constraintlayout:1.1.3',
            recyclerview          : 'androidx.recyclerview:recyclerview:1.0.0',
            paging                : "androidx.paging:paging-runtime:$versions.paging",
//            pagingCompose         : "androidx.paging:paging-compose:$versions.pagingCompose",
            lifecycle             : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
            lifecycleKtx          : "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleKtx",
            lifecycleViewModel    : "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleKtx",
            navigationFragment    : 'androidx.navigation:navigation-fragment:2.0.0',
            navigationUi          : 'androidx.navigation:navigation-ui:2.0.0',
            navigationFragmentKtx : 'androidx.navigation:navigation-fragment-ktx:2.0.0',
            navigationUiKtx       : 'androidx.navigation:navigation-ui-ktx:2.0.0',
            activityKtx           : "androidx.activity:activity-ktx:$versions.activityKtx",
            fragmentKtx           : "androidx.fragment:fragment-ktx:$versions.fragmentKtx",
//            idlingResource        : "androidx.test.espresso:espresso-idling-resource:$versions.idling"
    ]

    room = [
            room    : "androidx.room:room-runtime:$versions.room",
            roomktx : "androidx.room:room-ktx:$versions.room"
    ]
    coroutines = [
            core    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
            android : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",
            jdk     : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    ]
    kodein = [
            kodein  : "org.kodein.di:kodein-di-generic-jvm:$versions.kodein",
            android : "org.kodein.di:kodein-di-framework-android-x:$versions.kodein"
    ]
    retrofit = [
            retrofit       : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            gsonConverter  : "com.squareup.retrofit2:converter-gson:$versions.retrofit",
            adapterrxjava2 : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    ]
    unitTests = [
            mockwebserver : "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver",
            mockwebserver : "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver",
            coroutines    : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines",
            unitTest      : "junit:junit:4.12",
            mockitoCore   : "org.mockito:mockito-core:$versions.mockitoCore",
            mockitoKotlin : "org.mockito.kotlin:mockito-kotlin:$versions.mockitoKotlin",
            mockitoInline : "org.mockito:mockito-inline:$versions.mockitoCore",
            coreTesting   : "androidx.arch.core:core-testing:2.1.0",
    ]
    androidTests = [
            espressoCore      : "androidx.test.espresso:espresso-core:$versions.espressoVersion",
            espressoIntents   : "androidx.test.espresso:espresso-intents:$versions.espressoIntents",
            junit             : "androidx.test.ext:junit:1.1.1",
            runner            : "androidx.test:runner:$versions.test",
            espressoContrib   : "androidx.test.espresso:espresso-contrib:$versions.espressoContrib",
            rules             : "androidx.test:rules:$versions.test",
//            coroutines        : "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines",
            dexMaker          : "com.linkedin.dexmaker:dexmaker-mockito:$versions.mocktioDexmaker",
            mockitoKotlin     : "org.mockito.kotlin:mockito-kotlin:$versions.mockitoKotlin",
            mockitoCore       : "org.mockito:mockito-core:$versions.mockitoCore"
    ]
    di = [
            dagger               : "com.google.dagger:dagger:$versions.dagger",
            daggerAndroidSupport : "com.google.dagger:dagger-android-support:$versions.dagger"
    ]
    kapt = [
            room_compiler    : "androidx.room:room-compiler:$versions.room",
            lifecycle        : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
            dagger_compiler  : "com.google.dagger:dagger-compiler:2.15"
    ]
    kaptAndroidTests = [
            dagger_compiler  : "com.google.dagger:dagger-compiler:2.15"
    ]
    others = [
            rxJava             : 'io.reactivex.rxjava2:rxandroid:2.0.1',
            okHttpInterceptor  : 'com.squareup.okhttp3:logging-interceptor:3.11.0',
            materialsearchview : 'com.miguelcatalan:materialsearchview:1.4.0'
    ]

    androidLibs = androidx.values()
    retrofitLibs = retrofit.values()
    coroutinesLibs = coroutines.values()
    kodeinLibs = kodein.values()
    roomLibs = room.values()
    compilerLibs = kapt.values()
    unitTestLibs = unitTests.values()
    androidTestsLibs = androidTests.values()
    diLibs = di.values()
    others = others.values()
    kaptAndroidTestsLibs = kaptAndroidTests.values()
}